
@model  AHP.Models.AlternativeView

@{
    ViewBag.Title = "AddAlternative";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 id="SubTitle">Add alternative</h1>

<!-- LOADER -->
<div class="loader" id="divLoader" style="display:none;"></div>
@using (Html.BeginForm("AddAlternative", "Alternative", FormMethod.Post, new { id = "AddAlternativeForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row p-2">
        <div class="col-6 col-md-4">
            @Html.TextBoxFor(m => m.AlternativeName, new { @class = "form-control shadow", placeholder = "Alternative name", required = "required", autocomplete = "off" })
        </div>
        <div class="col-3 col-md-2 justify-content-around">
            <button type="button" class="btn btnPlus btn-success btn-sm" onclick="addAlternative()"><i class="fas fa-plus-circle pt-1 fa-lg"></i></button>
            <button type="button" class="btn btnPlus btn-danger btn-sm" onclick="removeAlternative()"><i class="fas fa-minus-circle pt-1 fa-lg"></i></button>
        </div>
        <div class="col-3 float-left">
            <button type="submit" id="submitBtn" class="btn btnLetter btn-success">Submit</button>
        </div>
    </div>
    <div class="row p-2 pb-3">
        <div class="col-6 col-md-4" id="alternative">
            @Html.TextBoxFor(m => m.AlternativeName, new { @class = "form-control shadow", placeholder = "Alternative name", required = "required", autocomplete = "off" })
        </div>
    </div>

}

@section scripts {
    <script>

    let warning = document.createElement("div");
    warning.setAttribute("style", "display:none");
    warning.setAttribute("id","warning")
    warning.setAttribute("class", "alert alert-danger");
    warning.setAttribute("role", "alert");
    warning.setAttribute("style","display:none; border: 2px solid red; font-weight: bold;")

    let subtitle = document.getElementById("SubTitle");
    subtitle.after(warning);

     let numOfAlternatives = 2;
    function addAlternative() {
        if (numOfAlternatives < 10) {
            let formRow = document.createElement("div");
            formRow.classList.add("row","pl-2","pr-2");
            let formCol = document.createElement("div");
            formCol.classList.add("col-6", "col-md-4");
            let formGroup = document.createElement("div");
            formGroup.classList.add("form-group"),
            formGroup.innerHTML = `@Html.TextBoxFor(m => m.AlternativeName, new { @class = "form-control shadow", placeholder = "Alternative name", required = "required", autocomplete="off" })`
            formCol.appendChild(formGroup);
            formRow.appendChild(formCol);
            $("#AddAlternativeForm").append(formRow);
            numOfAlternatives++;
        }
        else {
            warning.innerHTML = "Number of max. alternatives reached!";
            warning.setAttribute("style", "display:inline; letter-spacing:2px; font-size: 12px;")
            $('#warning').fadeIn('fast').delay(3000).fadeOut('slow');
        }
    }
    let form = document.getElementById("AddAlternativeForm");
    function removeAlternative() {
        if (numOfAlternatives > 2) {
                form.removeChild(form.lastChild)
                numOfAlternatives--;
            } else {
                 warning.innerHTML = "Number of min. alternatives reached!";
                 warning.setAttribute("style", "display:inline; letter-spacing:2px; font-size: 12px;")

                $('#warning').fadeIn('fast').delay(3000).fadeOut('slow');
            }

    }

    function checkIfDuplicateExists(w){
        return new Set(w).size !== w.length
    }

        $("#AddAlternativeForm").on("submit", function () {
         event.preventDefault();
         var url = '@Url.Action("AddNewAlternative", "Alternative")';
         var data = [];

         // Find all input fields
         var text = $('#AddAlternativeForm').find('input[name="AlternativeName"]');


        let inputText = [];
        let flag = false;
        for (let t of text) {
            inputText.push(t.value);
        }
        if (checkIfDuplicateExists(inputText)) {
            warning.innerHTML = "Duplicate alternative names!";
            warning.setAttribute("style", "display:inline; letter-spacing:2px; font-size: 12px;")
            $('#warning').fadeIn('fast').delay(3000).fadeOut('slow');
            flag = true;
        }

         let id = @ViewBag.id
         for (let t of text) {
              // Values of each input field
              // console.log(t.value);
             data.push({
                 AlternativeName: t.value,
                 ProjectId: id
             })
         };

        console.log(JSON.stringify(data));
            if (!flag) {
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: url,
                    data: JSON.stringify(data),
                    beforeSend: function () {
                        $("#divLoader").show("slow");
                        $('.container').css("filter", "blur(1px)");
                    },
                    success: function (response) {
                        console.log(response);
                        window.location.href = '@Url.Action("EditAlternative", "Alternative", new { id = @ViewBag.id })';
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            }
    });

    </script>
}